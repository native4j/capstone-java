plugins {
    id "java-library"
    id "maven-publish"
    id "com.diffplug.spotless" version "6.20.0"
}

project.archivesBaseName = "capstone-java"

repositories {
    mavenCentral()
}

configurations {
    shaded
    shaded.transitive = false
}

java {
    sourceCompatibility = 11
    targetCompatibility = 11

    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }

    withSourcesJar()
    withJavadocJar()
}

compileJava {
    // Build the bindings
    dependsOn ":lib:jar"
}

dependencies {
    implementation project(":lib")
    implementation 'org.jetbrains:annotations:24.0.0'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    shaded fileTree(dir: "${rootDir}/lib/build/distributions", include: '*.jar')
    implementation fileTree(dir: "${rootDir}/lib/build/distributions", include: '*.jar')
}

spotless {
    java {
        def rootDir = rootProject.projectDir.toPath()

        importOrder("java|javax", "", "\\#", "org.native4j")
        removeUnusedImports()
        licenseHeaderFile(rootDir.resolve("LICENSEHEADER").toString())

        eclipse().configFile(rootDir.resolve("formatter-config.xml").toString())

        formatAnnotations()
    }
}

test {
    useJUnitPlatform()
}

jar {
    from {
        configurations.shaded.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = project.group
            version = project.version
            artifactId = "capstone-java"
            from components.java;

            pom {
                name = "capstone-java"
                description = "Capstone bindings for Java"
                url = "https://github.com/native4j/capstone-java"
                licenses {
                    license {
                        name = "MIT"
                        url = "https://spdx.org/licenses/MIT.html"
                    }
                }
                developers {
                    developer {
                        id = "jus7n"
                        name = "Justin Phelps"
                        email = "jus7n@proton.me"
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/native4j/capstone-java.git"
                    developerConnection = 'scm:git:git://github.com/native4j/capstone-java.git'
                    url = 'https://github.com/native4j/capstone-java'
                }
            }

            pom.withXml {
                // getAt(String) wraps the results in 'NodeList'
                // So we extract the single item with 'get(0)'
                def node = asNode().getAt('dependencies').get(0)
                node.children().removeIf(c -> isRuntimeDependency(c))
            }
        }
    }

    repositories {
        maven {
            name = 'staging_deploy'
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

private static boolean isRuntimeDependency(Node node) {
    String scope = node.get("scope").text()
    return "runtime".equals(scope)
}